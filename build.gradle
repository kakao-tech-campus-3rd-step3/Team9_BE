plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.pado'
version = '0.0.1-SNAPSHOT'
description = 'Pado - Integrated Study Platform Service'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

ext {
	generatedDir = 'src/main/generated'
}

repositories {
	mavenCentral()
}

dependencies {
	// Web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.11'

	// Utility
	implementation 'org.apache.commons:commons-lang3:3.18.0'

	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	// H2
	runtimeOnly 'com.h2database:h2'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"

	// AWS
	implementation platform('software.amazon.awssdk:bom:2.25.56')
	implementation 'software.amazon.awssdk:s3'

	// Retry
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework:spring-aspects'

  //Security
  implementation 'org.springframework.boot:spring-boot-starter-security'


  //JWT
  implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
  runtimeOnly   'io.jsonwebtoken:jjwt-impl:0.11.5'
  runtimeOnly   'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// deploy
	implementation 'org.springframework.boot:spring-boot-starter-actuator'


}

tasks.named('test') {
	useJUnitPlatform()
}

jar {
	enabled = false
}

sourceSets {
	main.java.srcDirs += [ generatedDir ]
}

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generatedDir))
}

tasks.named('clean', Delete) {
	delete file(generatedDir)
}